#日志输出级别 debug<info<warn<error ;输出位置
log4j.rootLogger=debug,stdout,D,E
#未某个特定的包配不同的输出级别
#log4j.logger.org.apache=info

#设置stdout的日志输出控制台
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
#输出日志到控制台的方式，默认为System.out
log4j.appender.stdout.Target = System.out
#设置使用灵活布局
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
#灵活定义输出格式  %d ：时间,   %p:级别(%-5p 表示至少占5个字符，不足用空格补齐，-表示空格在右边，),   %t:线程名,   %c：类全名，  %r:方法执行耗时,   %m:附加信息，    %n 换行
log4j.appender.stdout.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss,SSS}  [%-5p]  method:[%-60c (%rms)]   --message:%m%n


#每天产生一个日志文件
log4j.appender.D=org.apache.log4j.DailyRollingFileAppender
#设置的输出日志
log4j.appender.D.File=D:/java/intellij/mybatis/web/WEB-INF/log/logForAll.txt
#设置的日志最大限制
log4j.appender.D.MaxFileSize=60000KB
#最多只保存20个备份文件
log4j.appender.D.MaxBackupIndex=20
#输出INFO级别以上的日志
log4j.appender.D.Threshold=debug
log4j.appender.D.Append = true
log4j.appender.D.ImmediateFlush = true
#log4j.appender.D.DatePattern ='.'yyyy-MM-dd
#设置使用灵活布局
log4j.appender.D.layout=org.apache.log4j.PatternLayout
#灵活定义输出格式
log4j.appender.D.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss,SSS} -[%-5p]  method:[%-100l (%rms)] --message:%m%n
#设置输出日志文件编码（可以控制乱码情况）
log4j.appender.D.encoding=UTF-8

log4j.appender.E = org.apache.log4j.DailyRollingFileAppender
log4j.appender.E.File =D:/java/intellij/mybatis/web/WEB-INF/log/error.txt
log4j.appender.E.Append = true
log4j.appender.E.Threshold = ERROR
#log4j.appender.E.DatePattern = '_'yyyyMMdd'.log'
log4j.appender.E.layout = org.apache.log4j.PatternLayout
log4j.appender.E.layout.ConversionPattern = %d{yyyy-MM-dd HH:mm:ss,SSS} -[%-5p]  method:[%-100l (%rms)] --message:%m%n
#设置输出日志文件编码（可以控制乱码情况）
log4j.appender.E.encoding=UTF-8

